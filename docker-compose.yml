secrets:
  ngrok-auth-token.yml:
    file: ./ngrok/ngrok-auth-token.yml

services:
  rr-frontend:
    container_name: rr-node
    build: node/
    restart: unless-stopped
    volumes:
      - ./node:/node
      - /node/node_modules # Remove this if you have pure JS dependencies
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      VONAGE_API_KEY: ${VONAGE_API_KEY}
      VONAGE_API_SECRET: ${VONAGE_API_SECRET}
      DB_HOST: rr-database
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: postgres
    # Ensure that postgres is running before starting up node
    depends_on:
      rr-db:
        condition: service_healthy

  # Exists to expose our web server to the internet to recieve SMS reports
  # Only runs with the http_tunnel profile and only needs to be up when
  # you are working on this feature
  rr-http-tunnel:
    container_name: rr-ngrok
    image: ngrok/ngrok:latest
    #restart: unless-stopped
    command:
      - "tunnel"
      - "--label"
      - "edge=edghts_2hICeyLAxhcrgGHRfCRrmt4KjId"
      - "rr-frontend:8080"
      - "--config"
      - "/etc/ngrok.yml,/run/secrets/ngrok-auth-token.yml"
    # command:
    #   - "start"
    #   - "--label edge=edghts_2hICeyLAxhcrgGHRfCRrmt4KjId"
    #   - "--config"
    #   - "/etc/ngrok.yml,/run/secrets/ngrok-auth-token.yml"
    profiles: [http_tunnel]
    links:
      - "rr-frontend:web-service"
    ports:
      - "4040:4040"
    secrets:
      - ngrok-auth-token.yml
    volumes:
      - ./ngrok/ngrok.yml:/etc/ngrok.yml
    depends_on:
      rr-frontend:
        condition: service_started

  rr-db:
    container_name: rr-postgres
    image: postgres
    restart: unless-stopped
    shm_size: 128mb # set shared memory limit when using docker-compose
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ./postgres/scripts:/scripts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U $$POSTGRES_USER"]
      interval: 1s
      retries: 5
      timeout: 2s
